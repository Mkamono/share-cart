on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    paths:
      - "infra/repository/**.tf"
      - ".github/workflows/actions/terraform-plan/action.yaml"
      - ".github/workflows/github-plan.yaml"

jobs:
  plan:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: "read"
      id-token: "write"
    defaults:
      run:
        working-directory: "infra/repository"

    steps:
      - uses: actions/checkout@v4

      - id: auth
        uses: "google-github-actions/auth@v2"
        with:
          token_format: "access_token"
          workload_identity_provider: ${{ secrets.WIF_PROVIDER_NAME }}
          service_account: ${{ secrets.WIF_SA_EMAIL }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.2"

#       # - name: Terraform fmt
#       #   id: fmt
#       #   run: terraform fmt -check
#       #   continue-on-error: true

#       - name: Terraform Init
#         id: init
#         run: terraform init

#       # - name: Terraform Validate
#       #   id: validate
#       #   run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color --parallelism=30

#       # - uses: actions/github-script@v7
#       #   if: github.event_name == 'pull_request'
#       #   env:
#       #     PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
#       #   with:
#       #     github-token: ${{ secrets.GITHUB_TOKEN }}
#       #     script: |
#       #       const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
#       #       #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
#       #       #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
#       #       <details><summary>Validation Output</summary>

#       #       \`\`\`\n
#       #       ${{ steps.validate.outputs.stdout }}
#       #       \`\`\`

#       #       </details>

#       #       #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

#       #       <details><summary>Show Plan</summary>

#       #       \`\`\`\n
#       #       ${process.env.PLAN}
#       #       \`\`\`

#       #       </details>

#       #       *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`infra/repository\`, Workflow: \`${{ github.workflow }}\`*`;

#       #       github.rest.issues.createComment({
#       #         issue_number: context.issue.number,
#       #         owner: context.repo.owner,
#       #         repo: context.repo.repo,
#       #         body: output
#       #       })

# Example workflow
# .github/workflows/example.yml

# name: "example oidc"

# jobs:
#   run:
#     name: "example to list bucket contents"
#     permissions:
#       id-token: write
#       contents: read
#     runs-on: "ubuntu-latest"
#     steps:
#       - uses: actions/checkout@v4
#       - id: "auth"
#         uses: "google-github-actions/auth@v2"
#         with:
#           token_format: "access_token"
#           workload_identity_provider: ${{ secrets.WIF_PROVIDER_NAME }} # this is the output provider_name from the TF module
#           service_account: ${{ secrets.WIF_SA_EMAIL }} # this is a SA email configured using the TF module with access to YOUR-GCS-BUCKET
#       - id: "list-buckets-contents"
#         run: |-
#           curl -sSf https://storage.cloud.google.com/share-cart-terraform-state-bucket/terraform/state/default.tfstate \
#             --header "Authorization: Bearer ${{ steps.auth.outputs.access_token }}"
