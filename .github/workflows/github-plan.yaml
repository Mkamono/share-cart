on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    paths:
      - "infra/repository/**.tf"
      - ".github/workflows/actions/terraform-plan/action.yaml"
      - ".github/workflows/github-plan.yaml"

jobs:
  plan:
    runs-on: ubuntu-latest
    # permissions:
    #   pull-requests: write
    #   contents: "read"
    #   id-token: "write"
    defaults:
      run:
        working-directory: "infra/repository"

    steps:
      - uses: actions/checkout@v4

      # - id: auth
      #   uses: "google-github-actions/auth@v2"
      #   with:
      #     project_id: "kamono-personal"
      #     workload_identity_provider: ${{ secrets.WIF_POOL_PROVIDER_ID }}
      #     service_account: ${{ secrets.WIF_SA_EMAIL }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.2"

      # - name: Terraform fmt
      #   id: fmt
      #   run: terraform fmt -check
      #   continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      # - name: Terraform Validate
      #   id: validate
      #   run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color --parallelism=30

      # - uses: actions/github-script@v7
      #   if: github.event_name == 'pull_request'
      #   env:
      #     PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
      #       #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
      #       #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
      #       <details><summary>Validation Output</summary>

      #       \`\`\`\n
      #       ${{ steps.validate.outputs.stdout }}
      #       \`\`\`

      #       </details>

      #       #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

      #       <details><summary>Show Plan</summary>

      #       \`\`\`\n
      #       ${process.env.PLAN}
      #       \`\`\`

      #       </details>

      #       *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`infra/repository\`, Workflow: \`${{ github.workflow }}\`*`;

      #       github.rest.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: output
      #       })
