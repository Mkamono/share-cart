// Code generated by ogen, DO NOT EDIT.

package oas

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// MarketGet implements GET /market operation.
	//
	// Get all markets.
	//
	// GET /market
	MarketGet(ctx context.Context) ([]Market, error)
	// SignUpPost implements POST /sign-up operation.
	//
	// POST /sign-up
	SignUpPost(ctx context.Context, req *SignUpPostReq) (SignUpPostRes, error)
	// TestGet implements GET /test operation.
	//
	// GET /test
	TestGet(ctx context.Context) (*R200OK, error)
	// NewError creates *R500InternalServerErrorStatusCode from error returned by handler.
	//
	// Used for common default response.
	NewError(ctx context.Context, err error) *R500InternalServerErrorStatusCode
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h   Handler
	sec SecurityHandler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, sec SecurityHandler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		sec:        sec,
		baseServer: s,
	}, nil
}
